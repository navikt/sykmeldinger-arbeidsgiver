name: Deploy to dev
on:
  push:
    branches:
      - '*'
      - '!main'
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/sykmeldinger-arbeidsgiver:${{ github.sha }}

jobs:
  snyk-test:
    name: Checkout code and analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamsykmelding --severity-threshold=high
  build:
    name: Checkout code and create docker tag
    runs-on: ubuntu-latest
    steps:
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Checkout code
        uses: actions/checkout@master
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Run tests
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew test
      - name: Build jar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew shadowJar -x test
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
  deploy-dev:
    name: Deploy to dev
    runs-on: ubuntu-latest
    needs: [build, snyk-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Deploy to dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator-dev.yaml
